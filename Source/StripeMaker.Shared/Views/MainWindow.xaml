<Window x:Class="StripeMaker.Views.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:models="clr-namespace:StripeMaker.Models"
		xmlns:views="clr-namespace:StripeMaker.Views"
		xmlns:controls="clr-namespace:StripeMaker.Views.Controls"
		xmlns:converters="clr-namespace:StripeMaker.Views.Converters"
		x:Name="WindowRoot"
		Title="{x:Static models:ProductService.Title}"
		Width="640" MinWidth="300"
		Height="340" MinHeight="320"
		SizeToContent="WidthAndHeight" ResizeMode="CanResize">
	<Window.Resources>
		<converters:LengthConverter x:Key="LengthConverterKey" BaseLength="100"/>
		<converters:AngleConverter x:Key="AngleConverterKey"/>
		<converters:RectConverter x:Key="RectConverterKey"/>

		<SolidColorBrush x:Key="StripeHeadBrush" Color="White"/>
		<SolidColorBrush x:Key="StripeTailBrush" Color="Red"/>
		<SolidColorBrush x:Key="LineBrush" Color="#AA909090"/>

		<Style x:Key="NumberTextStyle" TargetType="{x:Type TextBlock}">
			<Setter Property="FontSize" Value="11"/>
		</Style>

		<Style x:Key="DialStyle" TargetType="{x:Type controls:Dial}">
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="{StaticResource LineBrush}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type controls:Dial}">
						<Grid>
							<Ellipse x:Name="PART_Dial"
									 Fill="{TemplateBinding Background}"/>
							<Ellipse Margin="1.5"
									 StrokeThickness="{TemplateBinding BorderThickness}"
									 Stroke="{TemplateBinding BorderBrush}"
									 IsHitTestVisible="False"/>

							<Grid RenderTransformOrigin="0.5 0.5">
								<Grid.RenderTransform>
									<RotateTransform x:Name="PART_Rotation"/>
								</Grid.RenderTransform>

								<Ellipse Width="4" Height="4" VerticalAlignment="Top"
										 Fill="{TemplateBinding Foreground}"
										 IsHitTestVisible="False"/>
							</Grid>

							<ContentPresenter/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type Slider}">
			<Setter Property="controls:RangeValue.IsWheelEnabled" Value="True"/>
		</Style>

		<SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
		<SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFF0F0F0"/>
		<SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF7Eb4EA"/>
		<SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFDCECFC"/>
		<SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF569DE5"/>
		<SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFDAECFC"/>

		<Style x:Key="DirectionButtonStyle" TargetType="{x:Type ToggleButton}">
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="{StaticResource SliderThumb.Static.Border}"/>
			<Setter Property="Background" Value="{StaticResource SliderThumb.Static.Background}"/>
			<Setter Property="Padding" Value="2"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Grid Background="Transparent">
							<Polygon x:Name="triangle"
									 Margin="{TemplateBinding Padding}"
									 HorizontalAlignment="Center" VerticalAlignment="Center"
									 Points="0,0 0,2 1.732,1"
									 Stretch="Uniform"
									 StrokeThickness="{TemplateBinding BorderThickness}"
									 Stroke="{TemplateBinding BorderBrush}"
									 Fill="{TemplateBinding Background}"
									 SnapsToDevicePixels="True"
									 Focusable="False"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="triangle" Property="Stroke" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
								<Setter TargetName="triangle" Property="Fill" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="triangle" Property="Stroke" Value="{StaticResource SliderThumb.Pressed.Border}"/>
								<Setter TargetName="triangle" Property="Fill" Value="{StaticResource SliderThumb.Pressed.Background}"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="False">
								<Setter TargetName="triangle" Property="Points" Value="1.732,0 1.732,2 0,1"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<Grid Grid.Column="0" Grid.Row="0"
			  Width="280" Height="280" Margin="8,0,0,8"
			  VerticalAlignment="Top">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>

			<Slider Grid.Column="1" Grid.Row="0"
					x:Name="OffsetSlider"
					Margin="20,0"
					Focusable="False"
					Minimum="0" Maximum="100"
					Value="50"/>

			<Slider Grid.Column="1" Grid.Row="2"
					x:Name="WidthSlider"
					Margin="20,0,20,2"
					Focusable="False"
					Minimum="0" Maximum="200"
					Value="100"/>

			<Slider Grid.Column="0" Grid.Row="1"
					x:Name="HeightSlider"
					Margin="0,20"
					Orientation="Vertical" IsDirectionReversed="True"
					Focusable="False"
					Minimum="0" Maximum="200"
					Value="100"/>

			<Grid Grid.Column="1" Grid.Row="1">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>

				<Grid Grid.Column="1" Grid.Row="1"
					  x:Name="OuterBox"
					  Width="{Binding ElementName=WidthSlider, Path=Value, Mode=OneWay}"
					  Height="{Binding ElementName=HeightSlider, Path=Value, Mode=OneWay}">
					<Grid.Resources>
						<PathGeometry x:Key="BackwardStripe">
							<PathFigure StartPoint="0,0" IsClosed="True">
								<LineSegment Point="100,100"
											 converters:PathPoint.X="{Binding ElementName=OuterBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}"/>
								<LineSegment Point="100,50"
											 converters:PathPoint.X="{Binding ElementName=OuterBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=InnerBox, Path=Height, Mode=OneWay}"/>
								<LineSegment Point="50,0"
											 converters:PathPoint.X="{Binding ElementName=InnerBox, Path=Width, Mode=OneWay}"/>
							</PathFigure>
							<PathFigure StartPoint="0,100" IsClosed="True"
										converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}">
								<LineSegment Point="50,100"
											 converters:PathPoint.X="{Binding ElementName=InnerBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}"/>
								<LineSegment Point="0,50"
											 converters:PathPoint.Y="{Binding ElementName=InnerBox, Path=Height, Mode=OneWay}"/>
							</PathFigure>
						</PathGeometry>

						<PathGeometry x:Key="ForwardStripe">
							<PathFigure StartPoint="0,0" IsClosed="True">
								<LineSegment Point="50,0"
											 converters:PathPoint.X="{Binding ElementName=InnerBox, Path=Width, Mode=OneWay}"/>
								<LineSegment Point="0,50"
											 converters:PathPoint.Y="{Binding ElementName=InnerBox, Path=Height, Mode=OneWay}"/>
							</PathFigure>
							<PathFigure StartPoint="0,100" IsClosed="True"
										converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}">
								<LineSegment Point="100,0"
											 converters:PathPoint.X="{Binding ElementName=OuterBox, Path=Width, Mode=OneWay}"/>
								<LineSegment Point="100,50"
											 converters:PathPoint.X="{Binding ElementName=OuterBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=InnerBox, Path=Height, Mode=OneWay}"/>
								<LineSegment Point="50,100"
											 converters:PathPoint.X="{Binding ElementName=InnerBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}"/>
							</PathFigure>
						</PathGeometry>

						<PathGeometry x:Key="BackwardBox">
							<PathFigure StartPoint="0,0" IsClosed="True">
								<LineSegment Point="100,0"
											 converters:PathPoint.X="{Binding ElementName=OuterBox, Path=Width, Mode=OneWay}"/>
								<LineSegment Point="100,100"
											 converters:PathPoint.X="{Binding ElementName=OuterBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}"/>
								<LineSegment Point="0,100"
											 converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}"/>
							</PathFigure>
							<PathFigure StartPoint="0,50"
										converters:PathPoint.Y="{Binding ElementName=InnerBox, Path=Height, Mode=OneWay}">
								<LineSegment Point="100,50"
											 converters:PathPoint.X="{Binding ElementName=OuterBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=InnerBox, Path=Height, Mode=OneWay}"/>
							</PathFigure>
							<PathFigure StartPoint="50,0"
										converters:PathPoint.X="{Binding ElementName=InnerBox, Path=Width, Mode=OneWay}">
								<LineSegment Point="50,100"
											 converters:PathPoint.X="{Binding ElementName=InnerBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}"/>
							</PathFigure>
						</PathGeometry>

						<PathGeometry x:Key="ForwardBox">
							<PathFigure StartPoint="0,0" IsClosed="True">
								<LineSegment Point="100,0"
											 converters:PathPoint.X="{Binding ElementName=OuterBox, Path=Width, Mode=OneWay}"/>
								<LineSegment Point="100,100"
											 converters:PathPoint.X="{Binding ElementName=OuterBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}"/>
								<LineSegment Point="0,100"
											 converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}"/>
							</PathFigure>
							<PathFigure StartPoint="0,50"
										converters:PathPoint.Y="{Binding ElementName=InnerBox, Path=Height, Mode=OneWay}">
								<LineSegment Point="100,50"
											 converters:PathPoint.X="{Binding ElementName=OuterBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=InnerBox, Path=Height, Mode=OneWay}"/>
							</PathFigure>
							<PathFigure StartPoint="50,0"
										converters:PathPoint.X="{Binding ElementName=InnerBox, Path=Width, Mode=OneWay}">
								<LineSegment Point="50,100"
											 converters:PathPoint.X="{Binding ElementName=InnerBox, Path=Width, Mode=OneWay}"
											 converters:PathPoint.Y="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay}"/>
							</PathFigure>
						</PathGeometry>
					</Grid.Resources>

					<Control x:Name="InnerBox"
							 HorizontalAlignment="Left" VerticalAlignment="Top">
						<Control.Width>
							<MultiBinding Converter="{StaticResource LengthConverterKey}">
								<Binding ElementName="OffsetSlider" Path="Value" Mode="OneWay"/>
								<Binding ElementName="WidthSlider" Path="Value" Mode="OneWay"/>
							</MultiBinding>
						</Control.Width>
						<Control.Height>
							<MultiBinding Converter="{StaticResource LengthConverterKey}">
								<Binding ElementName="OffsetSlider" Path="Value" Mode="OneWay"/>
								<Binding ElementName="HeightSlider" Path="Value" Mode="OneWay"/>
								<Binding ElementName="WindowRoot" Path="IsBackward" Mode="OneWay"/>
							</MultiBinding>
						</Control.Height>
					</Control>

					<Grid x:Name="Stripe"
						  Background="{DynamicResource StripeHeadBrush}">
						<Path x:Name="StripePath"
							  Stretch="Fill"
							  Fill="{DynamicResource StripeTailBrush}">
							<Path.Style>
								<Style TargetType="{x:Type Path}">
									<Setter Property="Data" Value="{StaticResource BackwardStripe}"/>
									<Style.Triggers>
										<DataTrigger Binding="{Binding ElementName=WindowRoot, Path=IsBackward}" Value="False">
											<Setter Property="Data" Value="{StaticResource ForwardStripe}"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Path.Style>
						</Path>
					</Grid>

					<Path Stretch="Fill"
						  StrokeThickness="1"
						  Stroke="{DynamicResource LineBrush}"	
						  UseLayoutRounding="True">
						<Path.Style>
							<Style TargetType="{x:Type Path}">
								<Setter Property="Data" Value="{StaticResource BackwardBox}"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding ElementName=WindowRoot, Path=IsBackward}" Value="False">
										<Setter Property="Data" Value="{StaticResource ForwardBox}"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Path.Style>
					</Path>
				</Grid>

				<Grid Grid.Column="1" Grid.Row="0">
					<Grid Width="{Binding ElementName=InnerBox, Path=Width, Mode=OneWay}"
						  HorizontalAlignment="Left">
						<TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom"
								   Style="{StaticResource NumberTextStyle}"
								   Text="{Binding ElementName=InnerBox, Path=Width, Mode=OneWay, StringFormat={}{0:f0}}"/>
					</Grid>

					<TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom"
							   Style="{StaticResource NumberTextStyle}"
							   Text="{Binding ElementName=OuterBox, Path=Width, StringFormat={}{0:f0}}"/>
				</Grid>

				<Grid Grid.Column="0" Grid.Row="1">
					<Grid Height="{Binding ElementName=InnerBox, Path=Height, Mode=OneWay}"
						  VerticalAlignment="Top">
						<TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,3,0"
								   Style="{StaticResource NumberTextStyle}"
								   Text="{Binding ElementName=InnerBox, Path=Height, Mode=OneWay, StringFormat={}{0:f0}}"/>
					</Grid>

					<TextBlock HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,3,0"
							   Style="{StaticResource NumberTextStyle}"
							   Text="{Binding ElementName=OuterBox, Path=Height, Mode=OneWay, StringFormat={}{0:f0}}"/>
				</Grid>
			</Grid>

			<!-- Direction -->
			<ToggleButton Grid.Column="0" Grid.Row="0"
						  Style="{StaticResource DirectionButtonStyle}"
						  Width="22" Height="22" Margin="4,4,0,0"
						  IsChecked="{Binding ElementName=WindowRoot, Path=IsBackward, Mode=TwoWay}"/>

			<!-- Angle -->
			<controls:Dial Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2"
						   Width="36" Height="36" HorizontalAlignment="Left" VerticalAlignment="Bottom"
						   Style="{StaticResource DialStyle}"
						   TargetWidth="{Binding ElementName=WidthSlider, Path=Value, Mode=TwoWay}"
						   TargetHeight="{Binding ElementName=HeightSlider, Path=Value, Mode=TwoWay}"
						   IsBackward="{Binding ElementName=WindowRoot, Path=IsBackward, Mode=OneWay}">
				<TextBlock Style="{StaticResource NumberTextStyle}"
						   HorizontalAlignment="Center" VerticalAlignment="Center"
						   IsHitTestVisible="False"
						   Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Dial}}, Path=Angle, Mode=OneWay, StringFormat={}{0:f0}°}"
						   controls:TextPadding.Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:Dial}}, Path=Angle, Mode=OneWay}"/>
			</controls:Dial>
		</Grid>

		<Grid Grid.Column="0" Grid.Row="1"
			  x:Name="DashboardGrid">
			<!-- Copy -->
			<Button x:Name="CopyButton"
					Width="100" Height="22" Margin="8,0" HorizontalAlignment="Left" VerticalAlignment="Top"
					Content="Copy path data"
					Click="CopyButton_Click"/>
		</Grid>

		<Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>

			<Slider Grid.Column="1" Grid.Row="0"
					x:Name="FrameWidthSlider"
					Margin="4,0,8,0"
					Focusable="False"
					Minimum="0" Maximum="{Binding ElementName=Preview, Path=ActualWidth}"
					Value="180"/>

			<Slider Grid.Column="0" Grid.Row="1"
					x:Name="FrameHeightSlider"
					Margin="0,4,0,8"
					Orientation="Vertical" IsDirectionReversed="True"
					Focusable="False"
					Minimum="0" Maximum="{Binding ElementName=Preview, Path=ActualHeight}"
					Value="120"/>

			<Grid Grid.Column="1" Grid.Row="1"
				  x:Name="Preview"
				  MinWidth="300" MinHeight="300" Margin="4,4,8,8">
				<Grid.Background>
					<VisualBrush TileMode="Tile" Stretch="None"
								 VisualBrush.Visual="{Binding ElementName=Stripe}"
								 ViewportUnits="Absolute">
						<VisualBrush.Viewport>
							<MultiBinding Converter="{StaticResource RectConverterKey}">
								<Binding ElementName="Stripe" Path="ActualWidth"/>
								<Binding ElementName="Stripe" Path="ActualHeight"/>
							</MultiBinding>
						</VisualBrush.Viewport>
					</VisualBrush>
				</Grid.Background>

				<!-- Frame -->
				<Grid Width="{Binding ElementName=FrameWidthSlider, Path=Value, Mode=OneWay}"
					  Height="{Binding ElementName=FrameHeightSlider, Path=Value, Mode=OneWay}"
					  HorizontalAlignment="Left" VerticalAlignment="Top">
					<Rectangle StrokeThickness="1"
							   Stroke="{DynamicResource LineBrush}"
							   StrokeDashArray="3 2"/>

					<TextBlock Margin="0,0,3,0" HorizontalAlignment="Right" VerticalAlignment="Top"
							   Style="{StaticResource NumberTextStyle}"
							   Text="{Binding ElementName=FrameWidthSlider, Path=Value, Mode=OneWay, StringFormat={}{0:f0}}"/>

					<TextBlock Margin="3,0,0,1" HorizontalAlignment="Left" VerticalAlignment="Bottom"
							   Style="{StaticResource NumberTextStyle}"
							   Text="{Binding ElementName=FrameHeightSlider, Path=Value, Mode=OneWay, StringFormat={}{0:f0}}"/>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</Window>